replicaCount: 10


## Replace the following repository with an actual one
## pullPolicy is "Always" by default for "latest" tag
image:
  repository: 0123456789.dkr.ecr.ap-south-1.amazonaws.com/nodejs-test
  tag: latest
  pullPolicy: Always


## In order to give custom full-name to the resources, define the following values
nameOverride: ""
fullnameOverride: ""


## Provide externally created secrets like this
# externalImagePullSecrets: [name: docker-credentials]
externalImagePullSecrets: []


## ImagePullSecret can be create on the fly by setting "create: true" and providing appropriate values
## Run "aws ecr get-login-password --region ap-south-1"  to get the docker password
imageCredentials:
  create: false
  registry: https://0123456789.dkr.ecr.ap-south-1.amazonaws.com
  username: AWS
  password: YourAWSDockerPassword


## Any update should kill only 3 pods out of 10 at once, and keep 7 pods running all the time
updateStrategy:
  type: RollingUpdate
  maxUnavailable: 3


## By default type "LoadBalancer" creates a EC2 Classic Load Balancer on AWS
service:
  type: LoadBalancer
  port: 3000

containerPort: 3000


## Define resources depending on the application requirements
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi


## Horizontal Pod Scaling
## The following values keep a minimum 10 and a maximum of 20 replicas
## Auto-scaling takes place on 50% average CPU utilization or 60% memory by the pods
hpa:
  maxReplicas: 20
  minReplicas: 10
  avgCPU: 50
  avgMemory: 60


## Kubernetes version 1.16 (and below) support pre-defined priority-classes "ONLY" in kube-system namespace

## WARNING: You MUST not set "supportsDefaultClass" to true until:
## 1. You are using K8s v1.17 and higher
## OR
## 2. A lower version (< v1.17) of K8s but doing the deployment in 'kube-system' namspace
supportsDefaultClass: false


## The below values are associated to custom priority class
## These are used only when "supportsDefaultClass" is set to false
podPriority:
  description: For pods with highest user defined priority
  value: 1000000000 # Maximum allowed value of a user defined priority
  globalDefault: false


## AWS Token Refresher
## variables and cronJob
cron:

  image:
    repository: 0123456789.dkr.ecr.ap-south-1.amazonaws.com/nodejs-test
    tag: latest

  env:
    aws_account: 0123456789
    aws_access_key_id: YourAccesKeyHere
    aws_secret_access_key: YouSecretAccessKey
    region: ap-south-1

  schedule: "0 */11 * * *"